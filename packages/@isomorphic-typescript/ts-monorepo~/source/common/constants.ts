import * as path from 'path';
export const PACKAGE_JSON_FILENAME = "package.json";
export const TOOL_PACKAGE_JSON = require(`../${PACKAGE_JSON_FILENAME}`);
export const TS_BUILD_INFO_FILENAME = "tsconfig.tsbuildinfo";
export const TOOL_FULL_NAME = TOOL_PACKAGE_JSON.name as string;
export const TOOL_SHORT_NAME = TOOL_FULL_NAME.split('/')[1];
export const TOOL_VERSION = TOOL_PACKAGE_JSON.version as string;
export const CONFIG_FILE_NAME = `${TOOL_SHORT_NAME}.json`;
export const CONFIG_FILE_RELATIVE_PATH = `${CONFIG_FILE_NAME}`;
export const CONFIG_FILE_ABSOLUTE_PATH = path.resolve(CONFIG_FILE_RELATIVE_PATH);
export const MONOREPO_PACKAGE_JSON_RELATIVE_PATH = PACKAGE_JSON_FILENAME;
export const MONOREPO_PACKAGE_JSON_ABSOLUTE_PATH = path.resolve(MONOREPO_PACKAGE_JSON_RELATIVE_PATH);
export const TS_MONOREPO_FOLDER_RELATIVE_PATH = `.${TOOL_SHORT_NAME}`;
export const TS_MONOREPO_FOLDER_ABSOLUTE_PATH = path.resolve(TS_MONOREPO_FOLDER_RELATIVE_PATH);
export const TYPESCRIPT_LEAF_PACKAGES_CONFIG_FILE_NAME = "tsconfig-leaves.json";
export const TYPESCRIPT_LEAF_PACKAGES_CONFIG_FILE_RELATIVE_PATH = `${TS_MONOREPO_FOLDER_RELATIVE_PATH}/${TYPESCRIPT_LEAF_PACKAGES_CONFIG_FILE_NAME}`;
export const TYPESCRIPT_LEAF_PACKAGES_CONFIG_FILE_ABSOLUTE_PATH = path.resolve(TYPESCRIPT_LEAF_PACKAGES_CONFIG_FILE_RELATIVE_PATH);
export const PACKAGES_DIRECTORY_NAME = "packages";
export const PACKAGES_DIRECTORY_RELATIVE_PATH = `${PACKAGES_DIRECTORY_NAME}`;
export const PACKAGE_NAME_CONFIG_PATH_REQUIRED_SUFFIX = "~";
export const GLOBAL_SCOPE_NAME = "global-scope";
export const TS_CONFIG_JSON_FILENAME = "tsconfig.json";
export const TS_CONFIG_JSON_OUT_DIR = "./build";
export const TS_CONFIG_JSON_ROOT_DIR = "./source";
export const SUCCESS = Symbol("Success");
export type Success = typeof SUCCESS;